# Questions and Answers:

# Level - Easy:

Show first name, last name, and gender of patients whose gender is 'M'
SELECT first_name, last_name, gender
FROM patients
where gender = 'M'

Show first name and last name of patients who does not have allergies. (null)
SELECT first_name,
last_name
FROM patients
where allergies is null;

Show first name of patients that start with the letter 'C'
select first_name
from patients
where first_name like 'c%';

Show first name and last name of patients that weight within the range of 100 to 120 (inclusive)
select first_name,
last_name
from patients
where weight between 100 and 120;
---- OR ----- 
SELECT
  first_name,
  last_name
FROM patients
WHERE weight >= 100 AND weight <= 120;

Update the patients table for the allergies column. If the patient's allergies is null then replace it with 'NKA'
update patients
set allergies = 'NKA'
where allergies is null;

Show first name and last name concatinated into one column to show their full name.
select concat (first_name," ", last_name)
from patients

Show first name, last name, and the full province name of each patient. Example: 'Ontario' instead of 'ON'
SELECT
  first_name,
  last_name,
  province_name
FROM patients
  JOIN province_names ON patients.province_id = province_names.province_id;

Show how many patients have a birth_date with 2010 as the birth year.
select count(patient_id)
from patients
where birth_date like '2010%';
---- OR ---- 
SELECT COUNT(*) AS total_patients
FROM patients
WHERE YEAR(birth_date) = 2010;
----- OR -----
SELECT count(first_name) AS total_patients
FROM patients
WHERE
  birth_date >= '2010-01-01'
  AND birth_date <= '2010-12-31'
----- OR ------
SELECT count(first_name) AS total_patients
FROM patients
WHERE
  birth_date between '2010-01-01' AND '2010-12-31'

Show the first_name, last_name, and height of the patient with the greatest height.
select first_name,
last_name,
max (height)
from patients;
----- OR -----
SELECT
  first_name,
  last_name,
  height
FROM patients
WHERE height = (
    SELECT max(height)
    FROM patients
  )

Show all columns for patients who have one of the following patient_ids: 1,45,534,879,1000
select *
from patients
where patient_id in (1,45,534,879,1000);

Show the total number of admissions:
SELECT COUNT(*) AS total_admissions
FROM admissions;

Show all the columns from admissions where the patient was admitted and discharged on the same day.
select *
from admissions
where admission_date = discharge_date;

Show the patient id and the total number of admissions for patient_id 579.
select patient_id,
count(patient_id)
from admissions
where patient_id = 579;
----- OR -----
SELECT
  patient_id,
  COUNT(*) AS total_admissions
FROM admissions
WHERE patient_id = 579;

Based on the cities that our patients live in, show unique cities that are in province_id 'NS'.
select distinct (city) as unique_cities
from patients
where province_id = 'NS';
----- OR -----
SELECT city
FROM patients
GROUP BY city
HAVING province_id = 'NS';

Write a query to find the first_name, last name and birth date of patients who has height greater than 160 and weight greater than 70
select first_name,
last_name,
birth_date
from patients
where height > 160 and weight > 70;

Write a query to find list of patients first_name, last_name, and allergies where allergies are not null and are from the city of 'Hamilton'
select first_name,
last_name,
allergies
from patients
where allergies is not null
and city = 'Hamilton';

# Level - Medium:

Show unique birth years from patients and order them by ascending.
select distinct(year (birth_date))
from patients
order by birth_date asc;
----- OR ------
SELECT
  DISTINCT YEAR(birth_date) AS birth_year
FROM patients
ORDER BY birth_year;
----- OR ------
SELECT year(birth_date)
FROM patients
GROUP BY year(birth_date)

Show unique first names from the patients table which only occurs once in the list. 
For example, if two or more people are named 'John' in the first_name column then don't include their name in the output list. If only 1 person is named 'Leo' then include them in the output.
select first_name from patients
group by first_name
having count(first_name) = 1;
----- OR -----
SELECT first_name
FROM (
    SELECT
      first_name,
      count(first_name) AS occurrencies
    FROM patients
    GROUP BY first_name
  )
WHERE occurrencies = 1

Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.
SELECT
  patient_id,
  first_name
FROM patients
WHERE first_name LIKE 's____%s';
---- OR -----
SELECT
  patient_id,
  first_name
FROM patients
WHERE
  first_name LIKE 's%s'
  AND len(first_name) >= 6;
---- OR -----
SELECT
  patient_id,
  first_name
FROM patients
where
  first_name like 's%'
  and first_name like '%s'
  and len(first_name) >= 6;

Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'. Primary diagnosis is stored in the admissions table.
select patients.patient_id, 
first_name,
last_name
from patients
join admissions on patients.patient_id = admissions.patient_id
where admissions.diagnosis='Dementia'
---- OR -----
SELECT
  patient_id,
  first_name,
  last_name
FROM patients
WHERE patient_id IN (
    SELECT patient_id
    FROM admissions
    WHERE diagnosis = 'Dementia'
  );
------ OR -----
SELECT
  patient_id,
  first_name,
  last_name
FROM patients p
WHERE 'Dementia' IN (
    SELECT diagnosis
    FROM admissions
    WHERE admissions.patient_id = p.patient_id
  );

Display every patient's first_name.
Order the list by the length of each name and then by alphabetically.
select first_name
from patients
order by len(first_name), first_name asc
---- OR -----
select first_name
from patients
order by len(first_name), first_name;

Show the total amount of male patients and the total amount of female patients in the patients table.
Display the two results in the same row.
SELECT 
  (SELECT count(*) FROM patients WHERE gender='M') AS male_count, 
  (SELECT count(*) FROM patients WHERE gender='F') AS female_count;
----- OR ------
SELECT 
  SUM(Gender = 'M') as male_count, 
  SUM(Gender = 'F') AS female_count
FROM patients
----- OR ------
select 
  sum(case when gender = 'M' then 1 end) as male_count,
  sum(case when gender = 'F' then 1 end) as female_count 
from patients;

Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. 
Show results ordered ascending by allergies then by first_name then by last_name.
select first_name,
last_name, 
allergies
from patients
where allergies = 'Penicillin' OR allergies = 'Morphine'
order by allergies ASc, first_name, last_name;
----- OR -----
SELECT
  first_name,
  last_name,
  allergies
FROM patients
WHERE
  allergies IN ('Penicillin', 'Morphine')
ORDER BY
  allergies,
  first_name,
  last_name;
------ OR ------
SELECT
  first_name,
  last_name,
  allergies
FROM
  patients
WHERE
  allergies = 'Penicillin'
  OR allergies = 'Morphine'
ORDER BY
  allergies ASC,
  first_name ASC,
  last_name ASC;

Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.
select patient_id, diagnosis
from admissions
group by
patient_id,
diagnosis
having count(*) >1;

Show the city and the total number of patients in the city.
Order from most to least patients and then by city name ascending.
select city,
count (*) as num_patients
from patients
group by city
order by num_patients desc, city asc

Show first name, last name and role of every person that is either patient or doctor.
The roles are either "Patient" or "Doctor".
select first_name, last_name, 'Patient' as role
from patients
union all
select first_name, last_name, 'Doctor' as role 
from doctors

Show all allergies ordered by popularity. Remove NULL values from query.
SELECT
  allergies,
  count(*)
FROM patients
WHERE allergies NOT NULL
GROUP BY allergies
ORDER BY count(*) DESC
----- OR -----
SELECT
  allergies,
  count(allergies) AS total_diagnosis
FROM patients
GROUP BY allergies
HAVING
  allergies IS NOT NULL
ORDER BY total_diagnosis DESC

Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. Sort the list starting from the earliest birth_date.
SELECT
  first_name,
  last_name,
  birth_date
FROM patients
WHERE
  YEAR(birth_date) BETWEEN 1970 AND 1979
ORDER BY birth_date ASC;
----- OR -----
SELECT
  first_name,
  last_name,
  birth_date
FROM patients
WHERE
  birth_date >= '1970-01-01'
  AND birth_date < '1980-01-01'
ORDER BY birth_date ASC
----- OR -----
SELECT
  first_name,
  last_name,
  birth_date
FROM patients
WHERE
  birth_date >= '1970-01-01'
  AND birth_date < '1980-01-01'
ORDER BY birth_date ASC
----- OR -----
SELECT
  first_name,
  last_name,
  birth_date
FROM patients
WHERE year(birth_date) LIKE '197%'
ORDER BY birth_date ASC

We want to display each patient's full name in a single column. Their last_name in all upper letters must appear first, then first_name in all lower case letters. Separate the last_name and first_name with a comma. Order the list by the first_name in decending order
EX: SMITH,jane.
select concat(upper (last_name), ',', lower (first_name)) as new_name_format
from patients
order by first_name desc

Show the province_id(s), sum of height; where the total sum of its patient's height is greater than or equal to 7,000.
select province_id, 
sum (height) as sum_height
from patients
group by province_id
having sum_height >= 7000

Show the difference between the largest weight and smallest weight for patients with the last name 'Maroni'
select 
(max(weight) - min(weight)) as weight_data
from patients
where last_name = 'Maroni'

Show all of the days of the month (1-31) and how many admission_dates occurred on that day. 
Sort by the day with most admissions to least admissions.
select Day(admission_date) as day_number,
count(admission_date) as number_of_admission
from admissions
group by day_number
order by number_of_admission desc
----- OR ------
SELECT
  DAY(admission_date) AS day_number,
  COUNT(*) AS number_of_admissions
FROM admissions
GROUP BY day_number
ORDER BY number_of_admissions DESC

Show all columns for patient_id 542's most recent admission_date.
select * 
from admissions 
where patient_id = '542'
and admission_date like '2019%'

---- OR -----
SELECT *
FROM admissions
WHERE patient_id = 542
GROUP BY patient_id
HAVING
  admission_date = MAX(admission_date);
----- OR ------
SELECT *
FROM admissions
WHERE
  patient_id = '542'
  AND admission_date = (
    SELECT MAX(admission_date)
    FROM admissions
    WHERE patient_id = '542'
  )
----- OR ------
SELECT *
FROM admissions
WHERE patient_id = 542
ORDER BY admission_date DESC
LIMIT 1
------ OR -----
SELECT *
FROM admissions
GROUP BY patient_id
HAVING
  patient_id = 542
  AND max(admission_date)

Show patient_id, attending_doctor_id, and diagnosis for admissions that match one of the two criteria:
1. patient_id is an odd number and attending_doctor_id is either 1, 5, or 19.
2. attending_doctor_id contains a 2 and the length of patient_id is 3 characters.
select patient_id,attending_doctor_id, diagnosis
from admissions
WHERE 
    (
        patient_id % 2 <> 0 
        AND attending_doctor_id IN (1, 5, 19)
    )
    OR (
        CAST(attending_doctor_id AS VARCHAR) LIKE '%2%' 
        AND LEN(CAST(patient_id AS VARCHAR)) = 3
    );

